# Sample Riprap config file for using Islandora/database plugins.
# Requires that the "Riprap resource list" View be enabled in the
# Islandora instance. This View is bundled with the Islandora Riprap
# module.
#
# This plugin is agnostic to which media have fixity event checks performed
# on them. The filters in the "Riprap resource list" View determine that.
# See the View's filter criteria GUI for examples.
#
# This plugin differs from sample_islandora_config.yml in that it gets the
# media file's digest from Drupal, not Fedora. To do this, it calls the
# /islandora_riprap/checksum/{file_hash}/{algorithm} endpoint added by the
# Islandora Riprap module.
#
# Note that the PluginFetchDigestFromDrupal plugin uses the file's UUID, and
# not its URL, as its 'resource ID'.

####################
# General settings #
####################

# thin: true
# One of 'md5', 'sha1', or 'sha256'.
# fixity_algorithm: "sha1"
fixity_algorithm: "md5"

# Absolute or relative to the Riprap application directory.
failures_log_path: "/var/log/riprap_failed_events.log"

# New setting/flag for checksum verification
verify: true

###################
# Plugin settings #
###################

# Use this plugin if you want to use the 'Riprap resource (media) list' View provided by Islandora Riprap.
# plugins.fetchresourcelist: ["PluginFetchResourceListFromDrupalView"]
plugins.fetchresourcelist: ["PluginFetchFileListFromDrupalView"]
# drupal_baseurl: "http://localhost:8000"
drupal_baseurl: "http://drupalvm.test"
drupal_user: admin
drupal_password: admin
# drupal_password: islandora
# Absolute or relative to the Riprap application directory.
views_pager_data_file_path: "var/fetchresourcelist.from.drupal.pager.txt"

jsonapi_authorization_headers: ["Authorization: Basic YWRtaW46aXNsYW5kb3Jh"]

# Required. Non-standard or custom media need to have the fieldname they use to contain the file added to this list.
drupal_file_fieldnames:
  [
    "field_media_audio_file",
    "field_media_document",
    "field_media_image",
    "field_media_video_file",
  ]

plugins.fetchdigest: PluginFetchDigestFromDrupal

plugins.persist: PluginPersistToDatabase

plugins.postcheck: ["PluginPostCheckCopyFailures"]

# New plguin to verify Checksum
plugins.verify: PluginVerifyChecksum
